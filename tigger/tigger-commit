#!/bin/dash

######################################################################
# Helper Functions
######################################################################

# Error check: .tigger exists 
check_tigger () {
    if [ ! -d ".tigger" ]
    then
        echo "tigger-commit: error: tigger repository directory .tigger not found"
        exit 1
    fi
}

# Get last commit number if there is one otherwise return -1
# Usage: get_last_commit
get_last_commit () {
    last_commit=$(ls .tigger/commits | tr ' ' '\n' | tail -n 1)
    if [ -z "$last_commit" ]
    then 
        echo "-1"
    else
        echo "$last_commit"
    fi
}

# Check if there are any current changes between given last commit and index
# Usage: check_last_commit_diff 
check_last_commit_diff () {
    last_commit=$(get_last_commit)
    if [ "$last_commit" -ge 0 ] && [ -z "$(diff -r .tigger/commits/"$last_commit" .tigger/index)" ]
    then 
        echo "nothing to commit"
        exit 1
    elif [ "$last_commit" -eq -1 ] && [ -z "$(ls .tigger/index)" ]
    then
        echo "nothing to commit"
        exit 1         
    fi
}

# Given a commit number, commit the changes in tigger
# Usage: commit <commit> <message>
commit () {
    mkdir .tigger/commits/"$1"
    for file in .tigger/index/*
    do 
        if [ -f "$file" ] 
        then 
            cp "$file" .tigger/commits/"$1"
        fi
    done
    echo "$2" > .tigger/message/"$1"
    echo "$1" > .tigger/last_commit
    echo "Committed as commit $1"
}

# Add files to index (tigger-add functionality)
add_to_index () {
    for index_file in .tigger/index/*
    do
        if [ -f "$index_file" ] 
        then
            file=$(echo "$index_file" | sed -E 's/.tigger\/index\/(.*)/\1/')
            if [ ! -f "$file" ]
            then
                echo "tigger-commit: error: can not open '$file'"
                exit 1
            fi
            cp "$file" .tigger/index
        fi
    done
}

######################################################################
# Main
######################################################################

check_tigger

new_commit=$(($(get_last_commit) + 1))

# Case 1: tigger-commit -a -m <message>
if [ "$1" = "-a" ] && [ "$2" = "-m" ] && [ ! -z "$3" ]
then    
    add_to_index
    check_last_commit_diff
    commit "$new_commit" "$3"
# Case 2: tigger-commit -m <message>
elif [ "$1" = "-m" ] && [ ! -z "$2" ]
then
    check_last_commit_diff
    commit "$new_commit" "$2"
# Default - raise usage error
else 
    echo "usage: tigger-commit [-a] -m commit-message"
    exit 1
fi

