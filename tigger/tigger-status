#!/bin/dash

######################################################################
# Helper Functions
######################################################################

# Error check: .tigger exists 
check_tigger () {
    if [ ! -d ".tigger" ]
    then
        echo "tigger-status: error: tigger repository directory .tigger not found"
        exit 1
    fi
}

# Return sorted comma separated list of unique files in index, repository 
# and current directory (simulate hash table using regex check)
# Usage: get_new_commit 
get_unique_files () {
    str=""
    # Repository
    if [ -f .tigger/last_commit ] 
    then
        for file in .tigger/"$(cat .tigger/last_commit)"/*
        do 
            if [ -f "$file" ]
            then
                file=$(echo "$file" | sed -E 's/.tigger\/.*\/(.*)/\1/')
                str="$str-#$file#-"
            fi
        done
    fi
    # Index
    for file in .tigger/index/*
    do 
        if [ -f "$file" ]
        then
            file=$(echo "$file" | sed -E 's/.tigger\/.*\/(.*)/\1/')
            find=$(echo "$str" | sed -nE "/\-#$file#\-/p")
            if [ -z "$find" ]
            then 
                str="$str--#$file#-"
            fi
        fi
    done
    # Current Directory
    for file in *
    do 
        if [ -f "$file" ]
        then
            find=$(echo "$str" | sed -nE "/\-#$file#\-/p")
            if [ -z "$find" ]
            then 
                str="$str-#$file#-"
            fi
        fi
    done
    echo "$str" | sed -E 's/#\-+#/,/g' | sed -E 's/(\-#|#\-)//g' | sed -E $'s/,/\n/g' | sort | tr '\n' ',' | sed 's/.$//'
}

# Given comma separated list of files, print status for each file in order
# Usage: print_status <comma list>
print_status () {
    for file in $(echo "$1" | sed "s/,/ /g")
    do
        # added, committed, changed, added, changed -  file changed, different changes staged for commit
        if [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ ! -z "$(diff "$file" .tigger/index/"$file")" ] && [ ! -z "$(diff .tigger/index/"$file" .tigger/$(cat .tigger/last_commit)/"$file")" ]
        then
            echo "$file - file changed, different changes staged for commit"
        # added, committed, changed, added - file changed, changes staged for commit
        elif [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ -z "$(diff "$file" .tigger/index/"$file")" ] && [ ! -z "$(diff .tigger/index/"$file" .tigger/$(cat .tigger/last_commit)/"$file")" ]
        then
            echo "$file - file changed, changes staged for commit"
        # added, commited, changed - file changed, changes not staged for commit
        elif [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ ! -z "$(diff "$file" .tigger/index/"$file")" ] && [ -z "$(diff .tigger/index/"$file" .tigger/$(cat .tigger/last_commit)/"$file")" ]
        then
            echo "$file - file changed, changes not staged for commit"
        # added, committed, rm - file deleted
        elif [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ ! -f "$file" ] && [ -f .tigger/index/"$file" ]
        then 
            echo "$file - file deleted"
        # added, committed, tigger-rm - deleted
        elif [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ ! -f "$file" ] && [ ! -f .tigger/index/"$file" ]
        then 
            echo "$file - deleted"
        # added, committed - same as repo
        elif [ -f .tigger/last_commit ] && [ -f .tigger/$(cat .tigger/last_commit)/"$file" ] && [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ -z "$(diff "$file" .tigger/index/"$file")" ] && [ -z "$(diff "$file" .tigger/$(cat .tigger/last_commit)/"$file")" ]
        then 
            echo "$file - same as repo"
        # added, changed - added to index, file changed
        elif [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ ! -z "$(diff "$file" .tigger/index/"$file")" ]
        then
            echo "$file - added to index, file changed"
        # added, rm - added to index, file deleted
        elif [ ! -f "$file" ] && [ -f .tigger/index/"$file" ]
        then
            echo "$file - added to index, file deleted"
        # added - added to index
        elif [ -f "$file" ] && [ -f .tigger/index/"$file" ] && [ -z "$(diff "$file" .tigger/index/"$file")" ]
        then
            echo "$file - added to index"
        # nothing - untracked
        else 
            echo "$file - untracked"
        fi
    done
}

######################################################################
# Main
######################################################################

check_tigger

list=$(get_unique_files)

print_status "$list"
