#!/bin/dash

#Error check: commit has 2 arguments
if [ "$#" -ne 2 ] 
then 
    echo "usage: tigger-commit [-a] -m commit-message"
    exit 1
fi

# Error check: .tigger exists
if [ ! -d ".tigger" ]
then
    echo "tigger-commit: error: tigger repository directory .tigger not found"
    exit 1
fi

# Error check: .tigger/index is not empty
if [ -z "$(ls -A .tigger/index)" ]
then
    echo "nothing to commit"
    exit 1
fi

# Get latest commit number
count=0
while true
do 
    if [ ! -d ".tigger/$count" ] 
    then
        break
    fi
    count=$((count + 1))
done

# Found new commit number
new_commit=$count

# Check if there are any changes in index since last commit
if [ $count -gt 0 ]
then 
    last_commit=$((new_commit - 1))
    flag=0
    for commit in .tigger/$last_commit/*
    do  
        filename=$(echo $commit | sed -E 's/.tigger\/.*\/(.*)/\1/')
        if [ "$filename" != "message" ]
        then
            diff=$(diff .tigger/"$last_commit"/"$filename" .tigger/index/"$filename")
            if [ ! -z "$diff" ] 
            then 
                flag=1
            fi
        fi
    done
    if [ $flag -ne 1 ] 
    then 
        echo "nothing to commit"
        exit 1
    fi
fi

mkdir ".tigger/$new_commit"
for file in .tigger/index/*
do 
    cp "$file" .tigger/"$new_commit"
done
echo "$2" > .tigger/"$new_commit"/message
echo "Committed as commit $new_commit"

